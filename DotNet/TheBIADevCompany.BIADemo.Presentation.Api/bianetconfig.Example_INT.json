{
  "BiaNet": {
    "DatabaseConfigurations": [
      {
        "Key": "ProjectDatabase",
        "Provider": "SQLServer",
        "ConnectionString": "data source=the-bia-dev-team-db-int.the-deploy-domain-name.bia\\SEPDMAPPINT;initial catalog=BIADemo_INT;integrated security=True;MultipleActiveResultSets=True;Encrypt=False;App=BIADemo"
      }
    ],
    "Environment": {
      "Type": "INT",
      // UrlMatomo shoulld now contain the name of the php and js (originaly matomo.js & matomo.php) => rename to bypass ublock
      "UrlMatomo": "https://matomo-int.the-shared-tools-domain-name.bia/matomo(torename)",
      "SiteIdMatomo": "1"
    },
    "CommonFeatures": {
      "ClientForHub": {
        "SignalRUrl": "http://localhost/BIADemo/WebApi/HubForClients"
      }
    },
    "ApiFeatures": {
      "HubForClients": {
        // required only if you have several front server => you need a redis server
        "RedisConnectionString": "the-bia-dev-team-redis-int.the-deploy-domain-name.bia",
        "RedisChannelPrefix": "TheBIADevCompany.BIADemo"
      }
    },
    "Authentication": {
      "LdapDomains": [
        {
          "Name": "DOMAIN_BIA_1",
          "LdapName": "the-user-domain1-name.bia",
          "CredentialKeyInWindowsVault": "BIA:LDAP://the-user-domain1-name.bia",
          "ContainsGroup": true,
          "ContainsUser": true
        },
        {
          "Name": "DOMAIN_BIA_2",
          "LdapName": "the-user-domain2-name.bia",
          "CredentialKeyInWindowsVault": "BIA:LDAP://the-user-domain1-name.bia",
          "ContainsGroup": true,
          "ContainsUser": true
        },
        {
          "Name": "DOMAIN_BIA_3",
          "LdapName": "the-user-domain3-name.bia",
          "CredentialKeyInWindowsVault": "BIA:LDAP://the-user-domain3-name.bia",
          "ContainsGroup": true,
          "ContainsUser": true
        },
        {
          "Name": "DOMAIN_BIA_SRV",
          "LdapName": "the-server-domain-name.bia",
          "CredentialKeyInWindowsVault": "BIA:LDAP://the-server-domain-name.bia",
          "ContainsGroup": true,
          "ContainsUser": false
        }
      ]
    },
    "Roles": [
      //{
      //  "Label": "User",
      //  "Type": "Fake"
      //},
      //{
      //  "Label": "Admin",
      //  "Type": "Fake"
      //}
      {
        "Label": "User",
        "Type": "Ldap",
        "LdapGroups": [
          {
            "AddUsersOfDomains": [ "DOMAIN_BIA_3", "DOMAIN_BIA_1", "DOMAIN_BIA_2" ],
            "LdapName": "DOMAIN_BIA_SRV\\PREFIX-APP_BIADemo_INT_User",
            "Domain": "DOMAIN_BIA_SRV"
          }
        ]
      },
      {
        "Label": "Admin",
        "Type": "Ldap",
        "LdapGroups": [
          {
            "RecursiveGroupsOfDomains": [ "DOMAIN_BIA_1", "DOMAIN_BIA_SRV" ],
            "LdapName": "DOMAIN_BIA_SRV\\PREFIX-APP_Admin",
            "Domain": "DOMAIN_BIA_SRV"
          }
        ]
      }
    ],
    "ProfileConfiguration": {
      // Determine if the client browser get the profile image from the URL or Path (when true) or if the client calls the api to get the image instead (when false)
      "ClientProfileImageGetMode": false,
      "ProfileImageUrlOrPath": "https://mycompany.human-resources.com/Profile/{login}/Picture",
      "EditProfileImageUrl": "https://mycompany.human-resources.com/Profile/Edit",
      "AuthenticationConfiguration": {
        // 0 = Default : default authentication (windows)
        // 1 = Standard : standard authentication (login and password)
        // 2 = Jwt : jwt authentication (bearer token)
        // 3 = ApiKey : authentication by api key
        "Mode": 0
        // For Standard authentication only :
        //"CredentialSource": {
        //  "VaultCredentialsKey": "BIA:ProfileImageUserAccount" 
        //  "EnvLoginKey": "PI_USERNAME",
        //  "EnvPasswordKey": "PI_PASSWORD"
        //},
        // For ApiKey authentication only :
        //"ApiKey" : "{api_key_to_access_url}",
        //"ApiKeyName" : "X-API-Key",
      }
    }
  }
}